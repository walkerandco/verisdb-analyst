var parse=require('./lib/parseFiles.js'),
	args=require('./lib/parseArgs.js'),
	marked=require('marked'),
	fs=require('fs');

function genUML(docs){
	var r=[];

	for(key of Object.keys(docs)){
		var block='## '+key+'  \n`'+docs[key].sig+'`  \n'+docs[key].desc+'\n\n';
		var uml=Object.keys(docs[key].prop).map((p)=>{
			return '**'+p+':** '+docs[key].prop[p];
		});
		
		block+=uml.join('  \n');
		r.push(block);
	}

	return r.join('\n---\n');
}

var res=[];

for(var file of args.files){
	try{
		fs.statSync(file);
		res.push(genUML(parse.file(file)));
	}catch(e){
		console.log('File `'+file+'` doesn\'t exist. Skipping.');
		continue;
	}
}

var props=parse.package(args.pkg);
var head='# '+props.name+(props.desc?'\n'+props.desc:'')+(props.home?'  \n'+props.home:'');

var package=head+'\n\n'+res.join('\n---\n');

if(args.html){
	marked.setOptions({
		gfm: true,
		tables: true,
		sanitize: true,
		highlight: function(code){
			return require('highlight.js').highlightAuto(code).value;
		}
	});
	package='<!doctype html><html><head><title>'+props.name+'</title><style>'+fs.readFileSync(args.css).toString()+'</style></head><body><div class="markdown-body">'+marked(package)+'</div></body></html>';
}

if(args.out=='readme'){
	if(args.html) args.out+='.html';
	else args.out+='.md';
}

fs.writeFileSync(args.out,package);