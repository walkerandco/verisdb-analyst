var path=require('path'),
	fs=require('fs');

function parseFile(file){
	var data=fs.readFileSync(file).toString();
	
	var matches=data.match(/(\/\*\*)[\s\w\*@`]+(\*\/)\s+(function|var|const|let)\s+\w+(=|\((\w,?)+\))[^\{|;]*/gm),
		docs={};
		
	for(var doc of matches){
		var name=doc.match(/\/\*\*[\w`@\*\s]+\*\/\s+(?:function|var|const|let)\s+(\w+)/m),
			sig=doc.match(/\/\*\*[\w`@\*\s]+\*\/\s+((function|var|const|let)\s+(\w+)(=[^\{;]+|\((\w,?)+\)))?/),
			com=doc.match(/\/\*\*\s+([\w`@\*\s]+)\*\//m);

		var props=com[1].match(/@\w+ .+/gm),
			res={};

		props.map((line)=>{
			var arr=line.split(' ');
			res[arr[0].slice(1,arr[0].length)]=arr.slice(1,arr.length).join(' ');
		});

		docs[name[1]]={
			sig:sig[1],
			prop:res,
			desc: com[1].slice(0,com[1].indexOf('@')-1)
		};
	}

	return docs;
}

function package(fpath){
	var data=fs.readFileSync(path.join(fpath,'package.json')).toString();
	var json=JSON.parse(data);

	return {name:json.name,desc:json.description,home:json.homepage};
}

exports.file=parseFile;
exports.package=package;